# Description
# 1, 2,…,n의 모든 순열을 출력하는 프로그램을 작성하는 것은 흥미로운 연습입니다.
# 그러나 1, 2,…, 13의 순열의 개수가 6227020800이므로 10보다 큰 크기의 입력에서 모든 순열을 출력하기는 어렵습니다.
# 그러나 여기에 또 다른 흥미로운 순열 문제가 있습니다.
# 사전 순서로 1, 2,…,n순열을 정렬 할 수 있습니다.
#
# 다음은 사전 순으로 1,2,3의 순열입니다.
#    1 2 3     1 3 2     2 1 3     2 3 1     3 1 2     3 2 1
#
# 1,2,…,n의 순열이 주어지면 사전 순으로 다음 순열을 생성합니다.
# 예를 들어2 3 1 4의경우 답은2 3 4 1입니다.
#
# Input
# 입력의 첫 번째 줄에는 두 개의 정수N 및 K가 포함됩니다.
# 그 뒤에는 각각 1, 2,…,N의 순열을 포함하는 K개 줄이 이어집니다.
# 1 ≤N≤ 1000,K≤ 10 입니다.
#
# Output
# 출력은 K개 줄로구성되어야합니다.
# i번째 줄은 입력 i+1번째 순열에 해당하는 사전 식 다음 순열을 포함 해야합니다.
# (모든 출력 라인 끝에 공란이 있어야 합니다.)
#...
# 1234
# 1243
# 1324
# 1342    if 3 < 4, then [3,4,2] 정렬 [2,3,4] 3 다음 숫자 4를 제일 앞으로 [4,2,3]을 만들어서 이어 붙인다
# 1423
# 1432
# 2134
# 2143
# 2314
# 2341
#...
# 입력 예제
# 3 2
# 3 1 2
# 2 3 1
# 출력 예제
# 3 2 1
# 3 1 2
N,K = map(int,input().split())      # N개 (1,...,N) 숫자를 포함하는 순열 K개
for _ in range(K):
    L = list(map(int,input().split()))      # L = [1,3,4,2]
    for i in range(N-1,0,-1):   # i = n-1,n-2,...,1 (n-1번 비교)
        if L[i-1] < L[i]:
            R = L[i-1:]     # slicing R = [3,4,2]
            R.sort()        # 정렬    R = [2,3,4]
            j = R.index(L[i-1]) # 3의 위치를 알아낸다.
            number = R.pop(j+1) # 3 다음의 숫자를 꺼낸다. R = [2,3], number = 4
            R.insert(0,number)  # 4를 제일 앞에 넣는다. R = [4,3,2]
            L = L[:i-1] + R     # L = [1] + [4,3,2]
            break
    for n in L:
        print(n,end=' ')        # 숫자 쓰고 공란
    print()                 # 한줄 띈다.