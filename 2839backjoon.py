# 문제
# 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다.
# 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다.
# 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
#
# 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다.
# 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만,
# 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
#
# 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)
#
# 출력
# 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.
# 설탕 배달 N킬로그램을 3킬로 봉지와 5킬로 봉지를 최소한으로 사용해서 배달하려고 한다.
# ai : i킬로그램을 3킬로와 5킬로봉지로 만드는 최소 봉지 개수
# a0 = 0, 나머지는 ai = INF로 초기화
# 모든 K(3,5)에 대해서 ai-k가 INF가 아니면, ai = min(ai,ai-k+1)
N = int(input())
sugar = [3,5]
get = [5001]*(N+1)
get[0] = 0
for i in sugar:
    for j in range(i,N+1):
        if get[j-i] != 5001:
            get[j] = min(get[j],get[j-i]+1)
if get[N] == 5001:
    print(-1)
else:
    print(get[N])

#============교수님 코드==========
n = int(input())        # 설탕 n 킬로그램
array = [3,5]           # 설탕봉지
dp = [10**9] * (N+1)    # dp 테이블
dp[0] = 0               # 초기화
for k in array:         # 3,5 킬로 봉지에 대해서
    for i in range(k,n+1):  # i = k, k+1, ... , N
        if dp[i-k] != 10**9:
            dp[i] = min(dp[i],dp[i-k]+1)
if dp[n] != 10**9:
    print(dp[n])
else:
    print(-1)